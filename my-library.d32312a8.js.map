{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDCAAC,EAAAD,EAAA,S,aAGO,SAASE,EAAiBC,GAC/BF,EAAAG,QAAQC,UAGV,SAAyBF,GACvB,OAAOA,EACJG,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAAQC,EAAYJ,EAAZI,aAAcC,EAAEL,EAAFK,GAC1CC,EAsBZ,SAA4BF,GAC1B,MAAqB,KAAjBA,EACK,UAEFA,aAAA,EAAAA,EAAcG,MAAM,EAAG,GA1BNC,CAAmBJ,GACjCK,EAAUP,EAAMQ,cAChBC,EAASC,EAAcX,GACvBY,EAcZ,SAAmBV,GACjB,OAAOA,EAAOJ,KAAI,SAAAC,GAChB,OADqBA,EAAFK,MAfHS,CAAUX,GACxB,MAAO,gCAGIY,OAH4BV,EAAG,oEAIhCU,OADCJ,EAAO,qBAGWI,OAFnBb,EAAM,mDAGoBa,OADPN,EAAQ,kDACoBM,QAArB,EAAAC,EAAAC,UAASJ,GAAO,OAAiBE,OAAZT,EAAY,sBAGtEY,KAAK,IApBYC,CAAgBvB,GAmCtC,SAASgB,EAAcX,GACrB,OAAoB,OAAhBA,EACMU,OACN,+DAEG,kCAA8CI,OAAZd,GDtC3C,IAAMmB,EAAc,IAAI,EAAAC,EAAAC,aAEXC,EAAO,CAClBC,SAAUC,SAASC,cAAc,aACjCC,eAAgBF,SAASC,cAAc,sBACvCE,SAAUH,SAASC,cAAc,sBACjCG,UAAWJ,SAASC,cAAc,iBAEhCI,EAAQ,KACRC,EAAe,GACfC,EAAc,G,SAIIC,I,OAAAA,EAAfC,EAAA1C,EAAA,CAAA0C,EAAAC,GAAAC,MAAA,SAAAC,EAA2BC,G,IA2B9BC,EAQAC,EAjCIC,EACApC,EAWAqC,E,yEAZAD,EAAOH,EAAEK,OAAOC,WAChBvC,EAAKoC,EAAKI,aAAa,M,kBAKbzB,EAAY0B,eAAezC,G,OAAzCyB,EAAKiB,EAAAC,MACL,EAAAC,EAAAC,iBAAgBpB,G,kDAEhBqB,QAAQC,MAAKL,EAAAM,I,SAGTX,EAAU,CACdY,SAAU7B,SAASC,cAAc,uBACjC6B,WAAY9B,SAASC,cAAc,2BAE7B4B,SAASE,iBAAiB,QAASC,GAC3Cf,EAAQa,WAAWC,iBAAiB,QAASE,GAE7CnC,EAAKC,SAASmC,UAAUC,OAAO,aAC/BrC,EAAKK,SAAS4B,iBAAiB,QAASK,GACxCtC,EAAKC,SAASgC,iBAAiB,QAASM,GACxCC,OAAOP,iBAAiB,UAAWQ,IAGc,QAA/CzB,EAAA0B,KAAKC,MAAMC,aAAaC,QAAQ,uBAAe,IAA/C7B,OAAA,EAAAA,EAAiD8B,MAC/C,SAAAC,G,OAASA,EAAMjE,KAAOkE,OAAOlE,SAG/BqC,EAAQa,WAAWiB,YAAc,sBACjC9B,EAAQa,WAAWI,UAAUc,IAAI,aAGa,QAA9CjC,EAAAyB,KAAKC,MAAMC,aAAaC,QAAQ,sBAAc,IAA9C5B,OAAA,EAAAA,EAAgD6B,MAC9C,SAAAK,G,OAASA,EAAMrE,KAAOkE,OAAOlE,SAG/BqC,EAAQY,SAASkB,YAAc,qBAC/B9B,EAAQY,SAASK,UAAUc,IAAI,W,2DAxCFE,MAAAC,KAAAC,WA4CjC,SAAShB,IACPtC,EAAKC,SAASmC,UAAUC,OAAO,aAC/BG,OAAOe,oBAAoB,UAAWd,GACtCzC,EAAKM,UAAU/B,UAAY,GAG7B,SAASgE,EAAgBxB,GACnBA,EAAEyC,gBAAkBzC,EAAEK,QACxBkB,IAGJ,SAASG,EAAe1B,GACP,WAAXA,EAAE0C,MACJnB,IAQG,SAASH,EAAkBpB,GAChC,IAAKA,EAAEK,OAAOgB,UAAUsB,SAAS,WAS/B,OARIhB,KAAKC,MAAMC,aAAaC,QAAQ,kBAClCrC,EAAekC,KAAKC,MAAMC,aAAaC,QAAQ,iBAEjDrC,EAAamD,KAAKpD,GAClBqC,aAAagB,QAAQ,cAAelB,KAAKmB,UAAUrD,IACnDpC,EAAiBoC,GACjBO,EAAEK,OAAOgB,UAAUc,IAAI,gBACvBnC,EAAEK,OAAO6B,YAAc,uBAKvB,IAAMa,GADNtD,EAAekC,KAAKC,MAAMC,aAAaC,QAAQ,iBACPkB,QACtC,SAAAC,G,OAAQhB,OAAOgB,EAAKlF,MAAQkE,OAAOzC,EAAMzB,OAE3C0B,EAAgBG,EAAAsD,EAAA,CAAGH,GACnBlB,aAAagB,QAAQ,cAAelB,KAAKmB,UAAUrD,IACnDpC,EAAiBoC,GACjBO,EAAEK,OAAOgB,UAAU8B,OAAO,WAC1BnD,EAAEK,OAAO6B,YAAc,iBAIpB,SAASf,EAAgBnB,GAC9B,IAAKA,EAAEK,OAAOgB,UAAUsB,SAAS,UAS/B,OARIhB,KAAKC,MAAMC,aAAaC,QAAQ,iBAClCpC,EAAciC,KAAKC,MAAMC,aAAaC,QAAQ,gBAEhDpC,EAAYkD,KAAKpD,GACjBqC,aAAagB,QAAQ,aAAclB,KAAKmB,UAAUpD,IAClDrC,EAAiBqC,GACjBM,EAAEK,OAAOgB,UAAUc,IAAI,eACvBnC,EAAEK,OAAO6B,YAAc,sBAKvB,IAAMkB,GADN1D,EAAciC,KAAKC,MAAMC,aAAaC,QAAQ,gBACRkB,QACpC,SAAAC,G,OAAQhB,OAAOgB,EAAKlF,MAAQkE,OAAOzC,EAAMzB,OAE3C2B,EAAeE,EAAAsD,EAAA,CAAGE,GAClBvB,aAAagB,QAAQ,aAAclB,KAAKmB,UAAUpD,IAElDrC,EAAiBqC,GAEjBM,EAAEK,OAAOgB,UAAU8B,OAAO,UAC1BnD,EAAEK,OAAO6B,YAAc,gBAnH3BjD,EAAKI,eAAe6B,iBAAiB,S,SAEHlB,G,OAAZL,EAAW0C,MAAAC,KAAAC,cEhBjC,IAAMc,EAAclE,SAASC,cAAc,2BACrCkE,EAAcnE,SAASC,cAAc,yBAapC,SAASmE,EAAcC,GAE5BnG,EADesE,KAAKC,MAAMC,aAAaC,QAAQ,iBALjDL,OAAOP,iBAAiB,mBAAoBqC,GAC5CF,EAAYnC,iBAAiB,SAQtB,SAA4BsC,GACjCH,EAAYhC,UAAUc,IAAI,YAC1BmB,EAAYjC,UAAU8B,OAAO,YAC7BE,EAAYI,SAAWD,EAAMnD,OAC7BiD,EAAYG,UAAYD,EAAMnD,OAC9BkD,OAZFD,EAAYpC,iBAAiB,SAetB,SAA4BsC,GACjCF,EAAYjC,UAAUc,IAAI,YAC1BkB,EAAYhC,UAAU8B,OAAO,YAC7BG,EAAYG,SAAWD,EAAMnD,OAC7BgD,EAAYI,UAAYD,EAAMnD,OAG9BhD,EADesE,KAAKC,MAAMC,aAAaC,QAAQ,mB","sources":["src/js/modalOpenCloseLib.js","src/js/createLibrary.js","src/js/onLibraryLoad.js"],"sourcesContent":["import { renderMovieCard } from './createModal';\nimport { GetMovieApi } from './fetchMovies';\nimport { renderMovieCards } from './createLibrary';\n\n// import { locationURl } from './onLibraryLoad';\n\nconst getMovieApi = new GetMovieApi();\n\nexport const refs = {\n  backdrop: document.querySelector('.backdrop'),\n  modalOpenClose: document.querySelector('.js-modalOpenClose'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  modalCard: document.querySelector('.movie-modal'),\n};\nlet movie = null;\nlet watchedMovie = [];\nlet queuedMovie = [];\n\nrefs.modalOpenClose.addEventListener('click', onModalOpen);\n\nexport async function onModalOpen(e) {\n  // e.preventDefault();\n  const card = e.target.parentNode;\n  const id = card.getAttribute('id');\n  // movie = JSON.parse(localStorage.getItem('searchedMovies')).find(\n  //   movie => movie.id === Number(id)\n  // );\n  try {\n    movie = await getMovieApi.fetchMoviebyId(id);\n    renderMovieCard(movie);\n  } catch (error) {\n    console.error(error);\n  }\n  // renderMovieCard(movie);\n  const btnRefs = {\n    addQueue: document.querySelector('.modal-button-queue'),\n    addWatched: document.querySelector('.modal-button-watched'),\n  };\n  btnRefs.addQueue.addEventListener('click', onQueueBtnClick);\n  btnRefs.addWatched.addEventListener('click', onBtnWatchedClick);\n\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.closeBtn.addEventListener('click', onModalClose);\n  refs.backdrop.addEventListener('click', onBackdropClose);\n  window.addEventListener('keydown', closeOnKeydown);\n\n  if (\n    JSON.parse(localStorage.getItem('watchedCard'))?.find(\n      movie => movie.id === Number(id)\n    )\n  ) {\n    btnRefs.addWatched.textContent = 'REMOVE FROM WATCHED';\n    btnRefs.addWatched.classList.add('watched');\n  }\n  if (\n    JSON.parse(localStorage.getItem('queuedCard'))?.find(\n      movie => movie.id === Number(id)\n    )\n  ) {\n    btnRefs.addQueue.textContent = 'REMOVE FROM QUEUED';\n    btnRefs.addQueue.classList.add('queued');\n  }\n}\n\nfunction onModalClose() {\n  refs.backdrop.classList.toggle('is-hidden');\n  window.removeEventListener('keydown', closeOnKeydown);\n  refs.modalCard.innerHTML = '';\n}\n\nfunction onBackdropClose(e) {\n  if (e.currentTarget === e.target) {\n    onModalClose();\n  }\n}\nfunction closeOnKeydown(e) {\n  if (e.code === 'Escape') {\n    onModalClose();\n  }\n}\n\n// function renderMovieCard(movie) {\n//   refs.modalCard.innerHTML = createMovieCard(movie);\n// }\n\nexport function onBtnWatchedClick(e) {\n  if (!e.target.classList.contains('watched')) {\n    if (JSON.parse(localStorage.getItem('watchedCard'))) {\n      watchedMovie = JSON.parse(localStorage.getItem('watchedCard'));\n    }\n    watchedMovie.push(movie);\n    localStorage.setItem('watchedCard', JSON.stringify(watchedMovie));\n    renderMovieCards(watchedMovie);\n    e.target.classList.add('watched');\n    e.target.textContent = 'REMOVE FROM WATCHED';\n    return;\n  } else {\n    /* (e.target.classList.contains('watched')) */\n    watchedMovie = JSON.parse(localStorage.getItem('watchedCard'));\n    const filterWatchedMovie = watchedMovie.filter(\n      item => Number(item.id) !== Number(movie.id)\n    );\n    watchedMovie = [...filterWatchedMovie];\n    localStorage.setItem('watchedCard', JSON.stringify(watchedMovie));\n    renderMovieCards(watchedMovie);\n    e.target.classList.remove('watched');\n    e.target.textContent = 'ADD TO WATCHED';\n  }\n}\n\nexport function onQueueBtnClick(e) {\n  if (!e.target.classList.contains('queued')) {\n    if (JSON.parse(localStorage.getItem('queuedCard'))) {\n      queuedMovie = JSON.parse(localStorage.getItem('queuedCard'));\n    }\n    queuedMovie.push(movie);\n    localStorage.setItem('queuedCard', JSON.stringify(queuedMovie));\n    renderMovieCards(queuedMovie);\n    e.target.classList.add('queued');\n    e.target.textContent = 'REMOVE FROM QUEUED';\n    return;\n  } else {\n    /* (e.target.classList.contains('watched')) */\n    queuedMovie = JSON.parse(localStorage.getItem('queuedCard'));\n    const filterQueuedMovie = queuedMovie.filter(\n      item => Number(item.id) !== Number(movie.id)\n    );\n    queuedMovie = [...filterQueuedMovie];\n    localStorage.setItem('queuedCard', JSON.stringify(queuedMovie));\n    // if (locationURl === window.location.toString()) {\n    renderMovieCards(queuedMovie);\n    // }\n    e.target.classList.remove('queued');\n    e.target.textContent = 'ADD TO QUEUED';\n  }\n}\n","import { gallery } from './references';\nimport { getGenre } from './genresOfMovies';\n\nexport function renderMovieCards(movies) {\n  gallery.innerHTML = createMovieCard(movies);\n}\n\nfunction createMovieCard(movies) {\n  return movies\n    .map(({ poster_path, title, genres, release_date, id }) => {\n      const releaseDate = releaseDateChecker(release_date);\n      const titleUp = title.toUpperCase();\n      const poster = posterChecker(poster_path);\n      const genre = genreById(genres);\n      return `<li class=\"gallery__item\" id=${id}>\n        <img\n          class=\"gallery__img\"\n          src=\"${poster}\"\n          alt=${title}\n        />\n        <p class=\"gallery__name\">${titleUp}</p>\n        <p class=\"gallery__information\">${getGenre(genre)} | ${releaseDate}</p>\n    </li>`;\n    })\n    .join('');\n}\n\nfunction genreById(genres) {\n  return genres.map(({ id }) => {\n    return id;\n  });\n}\nfunction releaseDateChecker(release_date) {\n  if (release_date === '') {\n    return 'no info';\n  }\n  return release_date?.slice(0, 4);\n}\n\nfunction posterChecker(poster_path) {\n  if (poster_path === null) {\n    return (poster =\n      'https://via.placeholder.com/440x660.jpg?text=Image+Not+Found');\n  }\n  return `https://image.tmdb.org/t/p/w500${poster_path}`;\n}\n","import { renderMovieCards } from './createLibrary';\n// import { refs } from './modalOpenClose';\n// import { onModalOpen } from './modalOpenClose';\n\nconst libBtnWatch = document.querySelector('[data-action=\"watched\"]');\nconst libBtnQueue = document.querySelector('[data-action=\"queue\"]');\n// const backdrop = document.querySelector('.backdrop');\n// export const locationURl = window.location.toString();\n\n// const btnRefs = {\n//   addQueue: document.querySelector('.modal-button-queue'),\n//   addWatched: document.querySelector('.modal-button-watched'),\n// };\n\nwindow.addEventListener('DOMContentLoaded', onLibraryLoad);\nlibBtnWatch.addEventListener('click', onClickLibBtnWatch);\nlibBtnQueue.addEventListener('click', onClickLibBtnQueue);\n\nexport function onLibraryLoad(event) {\n  const movies = JSON.parse(localStorage.getItem('watchedCard'));\n  renderMovieCards(movies);\n}\n\nexport function onClickLibBtnWatch(event) {\n  libBtnWatch.classList.add('disabled');\n  libBtnQueue.classList.remove('disabled');\n  libBtnWatch.disabled = event.target;\n  libBtnQueue.disabled = !event.target;\n  onLibraryLoad();\n}\n\nexport function onClickLibBtnQueue(event) {\n  libBtnQueue.classList.add('disabled');\n  libBtnWatch.classList.remove('disabled');\n  libBtnQueue.disabled = event.target;\n  libBtnWatch.disabled = !event.target;\n\n  const movies = JSON.parse(localStorage.getItem('queuedCard'));\n  renderMovieCards(movies);\n  //   if (backdrop.classList.contains('is-hidden')) {\n  //     console.log(backdrop.classList.contains('is-hidden'));\n  //     const removeQueue = document.querySelector('.data-modal-queue');\n  //     const removeWatched = document.querySelector('.watched');\n\n  //     removeQueue.addEventListener('click', onQueueBtnClick);\n  //     removeWatched.addEventListener('click', onBtnWatchedClick);\n  //   }\n}\n\n// function onQueueBtnClick() {\n//   if (removeQueue.classList.contains('queued')) {\n//     const movies = JSON.parse(localStorage.getItem('queuedCard'));\n//     renderMovieCards(movies);\n//   }\n// }\n// function onBtnWatchedClick() {\n//   const movies = JSON.parse(localStorage.getItem('watchedCard'));\n//   renderMovieCards(movies);\n// }\n"],"names":["$bpxeT","parcelRequire","$go8W7","$c16a4462219b9753$export$bc472845f7b7844b","movies","gallery","innerHTML","map","param","poster_path","title","genres","release_date","id","releaseDate","slice","$c16a4462219b9753$var$releaseDateChecker","titleUp","toUpperCase","poster","$c16a4462219b9753$var$posterChecker","genre","$c16a4462219b9753$var$genreById","concat","$2Ch4P","getGenre","join","$c16a4462219b9753$var$createMovieCard","$d8b203f8451df7f9$var$getMovieApi","$kitKc","GetMovieApi","$d8b203f8451df7f9$export$21666b427502ea6d","backdrop","document","querySelector","modalOpenClose","closeBtn","modalCard","$d8b203f8451df7f9$var$movie","$d8b203f8451df7f9$var$watchedMovie","$d8b203f8451df7f9$var$queuedMovie","$d8b203f8451df7f9$var$_onModalOpen","$parcel$interopDefault","$2TvXO","mark","_callee","e","ref","ref1","card","btnRefs","target","parentNode","getAttribute","fetchMoviebyId","_ctx","sent","$cidzk","renderMovieCard","console","error","t0","addQueue","addWatched","addEventListener","$d8b203f8451df7f9$export$47c64e1cb6fdbeb7","$d8b203f8451df7f9$export$e3cd2a9e9061f2c1","classList","toggle","$d8b203f8451df7f9$var$onModalClose","$d8b203f8451df7f9$var$onBackdropClose","window","$d8b203f8451df7f9$var$closeOnKeydown","JSON","parse","localStorage","getItem","find","movie1","Number","textContent","add","movie2","apply","this","arguments","removeEventListener","currentTarget","code","contains","push","setItem","stringify","filterWatchedMovie","filter","item","$8nrFW","remove","filterQueuedMovie","$d7be0a03336c9c86$var$libBtnWatch","$d7be0a03336c9c86$var$libBtnQueue","$d7be0a03336c9c86$export$4cda8f1f13aeae6d","event","disabled"],"version":3,"file":"my-library.d32312a8.js.map"}