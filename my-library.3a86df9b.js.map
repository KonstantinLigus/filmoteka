{"mappings":"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","sources":["src/js/modalOpenCloseLib.js","src/js/createLibrary.js","src/js/onLibraryLoad.js"],"sourcesContent":["import { renderMovieCard } from './createModal';\nimport { GetMovieApi } from './fetchMovies';\nimport { renderMovieCards } from './createLibrary';\nimport { isQueueOpen, isWatchedOpen } from './onLibraryLoad';\n\n// import { locationURl } from './onLibraryLoad';\n\nconst getMovieApi = new GetMovieApi();\n\nexport const refs = {\n  backdrop: document.querySelector('.backdrop'),\n  modalOpenClose: document.querySelector('.js-modalOpenClose'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  modalCard: document.querySelector('.movie-modal'),\n};\nlet movie = null;\nlet watchedMovie = [];\nlet queuedMovie = [];\n\nrefs.modalOpenClose.addEventListener('click', onModalOpen);\n\nexport async function onModalOpen(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  const id = e.target.parentNode.getAttribute('id');\n  // movie = JSON.parse(localStorage.getItem('searchedMovies')).find(\n  //   movie => movie.id === Number(id)\n  // );\n  try {\n    movie = await getMovieApi.fetchMoviebyId(id);\n    renderMovieCard(movie);\n  } catch (error) {\n    console.error(error);\n  }\n  // renderMovieCard(movie);\n  const btnRefs = {\n    addQueue: document.querySelector('.modal-button-queue'),\n    addWatched: document.querySelector('.modal-button-watched'),\n  };\n  btnRefs.addQueue.addEventListener('click', onQueueBtnClick);\n  btnRefs.addWatched.addEventListener('click', onBtnWatchedClick);\n\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.closeBtn.addEventListener('click', onModalClose);\n  refs.backdrop.addEventListener('click', onBackdropClose);\n  window.addEventListener('keydown', closeOnKeydown);\n\n  if (\n    JSON.parse(localStorage.getItem('watchedCard'))?.find(\n      movie => movie.id === Number(id)\n    )\n  ) {\n    btnRefs.addWatched.textContent = 'REMOVE FROM WATCHED';\n    btnRefs.addWatched.classList.add('watched');\n  }\n  if (\n    JSON.parse(localStorage.getItem('queuedCard'))?.find(\n      movie => movie.id === Number(id)\n    )\n  ) {\n    btnRefs.addQueue.textContent = 'REMOVE FROM QUEUED';\n    btnRefs.addQueue.classList.add('queued');\n  }\n}\n\nfunction onModalClose() {\n  refs.backdrop.classList.toggle('is-hidden');\n  window.removeEventListener('keydown', closeOnKeydown);\n  refs.modalCard.innerHTML = '';\n}\n\nfunction onBackdropClose(e) {\n  if (e.currentTarget === e.target) {\n    onModalClose();\n  }\n}\nfunction closeOnKeydown(e) {\n  if (e.code === 'Escape') {\n    onModalClose();\n  }\n}\n\n// function renderMovieCard(movie) {\n//   refs.modalCard.innerHTML = createMovieCard(movie);\n// }\n\nexport function onBtnWatchedClick(e) {\n  if (!e.target.classList.contains('watched')) {\n    if (JSON.parse(localStorage.getItem('watchedCard'))) {\n      watchedMovie = JSON.parse(localStorage.getItem('watchedCard'));\n    }\n    watchedMovie.push(movie);\n    localStorage.setItem('watchedCard', JSON.stringify(watchedMovie));\n    if (isWatchedOpen) {\n      renderMovieCards(watchedMovie);\n    }\n\n    e.target.classList.add('watched');\n    e.target.textContent = 'REMOVE FROM WATCHED';\n    return;\n  } else {\n    /* (e.target.classList.contains('watched')) */\n    watchedMovie = JSON.parse(localStorage.getItem('watchedCard'));\n    const filterWatchedMovie = watchedMovie.filter(\n      item => Number(item.id) !== Number(movie.id)\n    );\n    watchedMovie = [...filterWatchedMovie];\n    localStorage.setItem('watchedCard', JSON.stringify(watchedMovie));\n    if (isWatchedOpen) {\n      renderMovieCards(watchedMovie);\n    }\n    e.target.classList.remove('watched');\n    e.target.textContent = 'ADD TO WATCHED';\n  }\n}\n\nexport function onQueueBtnClick(e) {\n  if (!e.target.classList.contains('queued')) {\n    if (JSON.parse(localStorage.getItem('queuedCard'))) {\n      queuedMovie = JSON.parse(localStorage.getItem('queuedCard'));\n    }\n    queuedMovie.push(movie);\n    localStorage.setItem('queuedCard', JSON.stringify(queuedMovie));\n    if (isQueueOpen) {\n      renderMovieCards(queuedMovie);\n    }\n    e.target.classList.add('queued');\n    e.target.textContent = 'REMOVE FROM QUEUED';\n    return;\n  } else {\n    /* (e.target.classList.contains('watched')) */\n    queuedMovie = JSON.parse(localStorage.getItem('queuedCard'));\n    const filterQueuedMovie = queuedMovie.filter(\n      item => Number(item.id) !== Number(movie.id)\n    );\n    queuedMovie = [...filterQueuedMovie];\n    localStorage.setItem('queuedCard', JSON.stringify(queuedMovie));\n    if (isQueueOpen) {\n      renderMovieCards(queuedMovie);\n    }\n    e.target.classList.remove('queued');\n    e.target.textContent = 'ADD TO QUEUED';\n  }\n}\n","import { gallery } from './references';\nimport { getGenre } from './genresOfMovies';\n\nexport function renderMovieCards(movies) {\n  if (movies === null || movies.length === 0) {\n    gallery.innerHTML =\n      '<img src=https://cdn.dribbble.com/users/888330/screenshots/2653750/media/b7459526aeb0786638a2cf16951955b1.png />';\n    return;\n  }\n  gallery.innerHTML = createMovieCard(movies);\n}\n\nfunction createMovieCard(movies) {\n  return movies\n    .map(({ poster_path, title, genres, release_date, id }) => {\n      const releaseDate = releaseDateChecker(release_date);\n      const titleUp = title.toUpperCase();\n      const poster = posterChecker(poster_path);\n      const genre = genreById(genres);\n      return `<li class=\"gallery__item\" id=${id}>\n        <img\n          class=\"gallery__img\"\n          src=\"${poster}\"\n          alt=${title}\n        />\n        <p class=\"gallery__name\">${titleUp}</p>\n        <p class=\"gallery__information\">${getGenre(genre)} | ${releaseDate}</p>\n    </li>`;\n    })\n    .join('');\n}\n\nfunction genreById(genres) {\n  return genres.map(({ id }) => {\n    return id;\n  });\n}\nfunction releaseDateChecker(release_date) {\n  if (release_date === '') {\n    return 'no info';\n  }\n  return release_date?.slice(0, 4);\n}\n\nfunction posterChecker(poster_path) {\n  if (poster_path === null) {\n    return (poster =\n      'https://via.placeholder.com/440x660.jpg?text=Image+Not+Found');\n  }\n  return `https://image.tmdb.org/t/p/w500${poster_path}`;\n}\n","import { renderMovieCards } from './createLibrary';\nimport { loaderShow, hideLoader } from './loader';\n\nconst libBtnWatch = document.querySelector('[data-action=\"watched\"]');\nconst libBtnQueue = document.querySelector('[data-action=\"queue\"]');\nexport let isWatchedOpen = true;\nexport let isQueueOpen = false;\n\nwindow.addEventListener('DOMContentLoaded', onLibraryLoad);\nlibBtnWatch.addEventListener('click', onClickLibBtnWatch);\nlibBtnQueue.addEventListener('click', onClickLibBtnQueue);\n\nexport function onLibraryLoad(event) {\n  loaderShow();\n  const movies = JSON.parse(localStorage.getItem('watchedCard'));\n  hideLoader();\n  renderMovieCards(movies);\n}\n\nexport function onClickLibBtnWatch(event) {\n  libBtnWatch.classList.add('disabled');\n  libBtnQueue.classList.remove('disabled');\n  libBtnWatch.disabled = event.target;\n  libBtnQueue.disabled = !event.target;\n  openWatched();\n  onLibraryLoad();\n}\n\nexport function onClickLibBtnQueue(event) {\n  loaderShow();\n  libBtnQueue.classList.add('disabled');\n  libBtnWatch.classList.remove('disabled');\n  libBtnQueue.disabled = event.target;\n  libBtnWatch.disabled = !event.target;\n  openQueue();\n  const movies = JSON.parse(localStorage.getItem('queuedCard'));\n  hideLoader();\n  renderMovieCards(movies);\n}\n\nfunction openWatched() {\n  isWatchedOpen = true;\n  isQueueOpen = false;\n}\nfunction openQueue() {\n  isWatchedOpen = false;\n  isQueueOpen = true;\n}\n"],"names":["$bpxeT","parcelRequire","$go8W7","$c16a4462219b9753$export$bc472845f7b7844b","movies","length","gallery","innerHTML","map","param","poster_path","title","genres","release_date","id","releaseDate","slice","$c16a4462219b9753$var$releaseDateChecker","titleUp","toUpperCase","poster","$c16a4462219b9753$var$posterChecker","genre","$c16a4462219b9753$var$genreById","concat","$2Ch4P","getGenre","join","$c16a4462219b9753$var$createMovieCard","$d7be0a03336c9c86$var$libBtnWatch","document","querySelector","$d7be0a03336c9c86$var$libBtnQueue","$d7be0a03336c9c86$export$bea27853fa47345","$d7be0a03336c9c86$export$9509f5efa46182d7","$d7be0a03336c9c86$export$4cda8f1f13aeae6d","event","$kvC6y","loaderShow","JSON","parse","localStorage","getItem","hideLoader","window","addEventListener","classList","add","remove","disabled","target","$d8b203f8451df7f9$var$getMovieApi","$kitKc","GetMovieApi","$d8b203f8451df7f9$export$21666b427502ea6d","backdrop","modalOpenClose","closeBtn","modalCard","$d8b203f8451df7f9$var$movie","$d8b203f8451df7f9$var$watchedMovie","$d8b203f8451df7f9$var$queuedMovie","$d8b203f8451df7f9$var$_onModalOpen","$parcel$interopDefault","$2TvXO","mark","_callee","e","ref","ref1","btnRefs","currentTarget","parentNode","getAttribute","fetchMoviebyId","_ctx","sent","$cidzk","renderMovieCard","console","error","t0","addQueue","addWatched","$d8b203f8451df7f9$export$47c64e1cb6fdbeb7","$d8b203f8451df7f9$export$e3cd2a9e9061f2c1","toggle","$d8b203f8451df7f9$var$onModalClose","$d8b203f8451df7f9$var$onBackdropClose","$d8b203f8451df7f9$var$closeOnKeydown","find","movie1","Number","textContent","movie2","apply","this","arguments","removeEventListener","code","contains","push","setItem","stringify","filterWatchedMovie","filter","item","$8nrFW","filterQueuedMovie"],"version":3,"file":"my-library.3a86df9b.js.map"}