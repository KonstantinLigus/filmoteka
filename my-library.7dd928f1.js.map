{"mappings":"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","sources":["src/js/modalOpenCloseLib.js","src/js/createLibrary.js","src/js/onLibraryLoad.js"],"sourcesContent":["import { renderMovieCard } from './createModal';\nimport { GetMovieApi } from './fetchMovies';\nimport { renderMovieCards } from './createLibrary';\nimport { isQueueOpen, isWatchedOpen } from './onLibraryLoad';\n\n// import { locationURl } from './onLibraryLoad';\n\nconst getMovieApi = new GetMovieApi();\n\nexport const refs = {\n  backdrop: document.querySelector('.backdrop'),\n  modalOpenClose: document.querySelector('.js-modalOpenClose'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  modalCard: document.querySelector('.movie-modal'),\n};\nlet movie = null;\nlet watchedMovie = [];\nlet queuedMovie = [];\n\nrefs.modalOpenClose.addEventListener('click', onModalOpen);\n\nexport async function onModalOpen(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  const id = e.target.parentNode.getAttribute('id');\n  // movie = JSON.parse(localStorage.getItem('searchedMovies')).find(\n  //   movie => movie.id === Number(id)\n  // );\n  try {\n    movie = await getMovieApi.fetchMoviebyId(id);\n    renderMovieCard(movie);\n  } catch (error) {\n    console.error(error);\n  }\n  // renderMovieCard(movie);\n  const btnRefs = {\n    addQueue: document.querySelector('.modal-button-queue'),\n    addWatched: document.querySelector('.modal-button-watched'),\n  };\n  btnRefs.addQueue.addEventListener('click', onQueueBtnClick);\n  btnRefs.addWatched.addEventListener('click', onBtnWatchedClick);\n\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.closeBtn.addEventListener('click', onModalClose);\n  refs.backdrop.addEventListener('click', onBackdropClose);\n  window.addEventListener('keydown', closeOnKeydown);\n\n  if (\n    JSON.parse(localStorage.getItem('watchedCard'))?.find(\n      movie => movie.id === Number(id)\n    )\n  ) {\n    btnRefs.addWatched.textContent = 'REMOVE FROM WATCHED';\n    btnRefs.addWatched.classList.add('watched');\n  }\n  if (\n    JSON.parse(localStorage.getItem('queuedCard'))?.find(\n      movie => movie.id === Number(id)\n    )\n  ) {\n    btnRefs.addQueue.textContent = 'REMOVE FROM QUEUED';\n    btnRefs.addQueue.classList.add('queued');\n  }\n}\n\nfunction onModalClose() {\n  refs.backdrop.classList.toggle('is-hidden');\n  window.removeEventListener('keydown', closeOnKeydown);\n  refs.modalCard.innerHTML = '';\n}\n\nfunction onBackdropClose(e) {\n  if (e.currentTarget === e.target) {\n    onModalClose();\n  }\n}\nfunction closeOnKeydown(e) {\n  if (e.code === 'Escape') {\n    onModalClose();\n  }\n}\n\n// function renderMovieCard(movie) {\n//   refs.modalCard.innerHTML = createMovieCard(movie);\n// }\n\nexport function onBtnWatchedClick(e) {\n  if (!e.target.classList.contains('watched')) {\n    if (JSON.parse(localStorage.getItem('watchedCard'))) {\n      watchedMovie = JSON.parse(localStorage.getItem('watchedCard'));\n    }\n    watchedMovie.push(movie);\n    localStorage.setItem('watchedCard', JSON.stringify(watchedMovie));\n    if (isWatchedOpen) {\n      renderMovieCards(watchedMovie);\n    }\n\n    e.target.classList.add('watched');\n    e.target.textContent = 'REMOVE FROM WATCHED';\n    return;\n  } else {\n    /* (e.target.classList.contains('watched')) */\n    watchedMovie = JSON.parse(localStorage.getItem('watchedCard'));\n    const filterWatchedMovie = watchedMovie.filter(\n      item => Number(item.id) !== Number(movie.id)\n    );\n    watchedMovie = [...filterWatchedMovie];\n    localStorage.setItem('watchedCard', JSON.stringify(watchedMovie));\n    if (isWatchedOpen) {\n      renderMovieCards(watchedMovie);\n    }\n    e.target.classList.remove('watched');\n    e.target.textContent = 'ADD TO WATCHED';\n  }\n}\n\nexport function onQueueBtnClick(e) {\n  if (!e.target.classList.contains('queued')) {\n    if (JSON.parse(localStorage.getItem('queuedCard'))) {\n      queuedMovie = JSON.parse(localStorage.getItem('queuedCard'));\n    }\n    queuedMovie.push(movie);\n    localStorage.setItem('queuedCard', JSON.stringify(queuedMovie));\n    if (isQueueOpen) {\n      renderMovieCards(queuedMovie);\n    }\n    e.target.classList.add('queued');\n    e.target.textContent = 'REMOVE FROM QUEUED';\n    return;\n  } else {\n    /* (e.target.classList.contains('watched')) */\n    queuedMovie = JSON.parse(localStorage.getItem('queuedCard'));\n    const filterQueuedMovie = queuedMovie.filter(\n      item => Number(item.id) !== Number(movie.id)\n    );\n    queuedMovie = [...filterQueuedMovie];\n    localStorage.setItem('queuedCard', JSON.stringify(queuedMovie));\n    if (isQueueOpen) {\n      renderMovieCards(queuedMovie);\n    }\n    e.target.classList.remove('queued');\n    e.target.textContent = 'ADD TO QUEUED';\n  }\n}\n","import { gallery } from './references';\nimport { getGenre } from './genresOfMovies';\n\nexport function renderMovieCards(movies) {\n  if (movies === null || movies.length === 0) {\n    gallery.innerHTML =\n      '<img src=https://cdn.dribbble.com/users/888330/screenshots/2653750/media/b7459526aeb0786638a2cf16951955b1.png />';\n    return;\n  }\n  gallery.innerHTML = createMovieCard(movies);\n}\n\nfunction createMovieCard(movies) {\n  return movies\n    .map(({ poster_path, title, genres, release_date, id }) => {\n      const releaseDate = releaseDateChecker(release_date);\n      const titleUp = title.toUpperCase();\n      const poster = posterChecker(poster_path);\n      const genre = genreById(genres);\n      return `<li class=\"gallery__item\" id=${id}>\n        <img\n          class=\"gallery__img\"\n          src=\"${poster}\"\n          alt=${title}\n        />\n        <p class=\"gallery__name\">${titleUp}</p>\n        <p class=\"gallery__information\">${getGenre(genre)} | ${releaseDate}</p>\n    </li>`;\n    })\n    .join('');\n}\n\nfunction genreById(genres) {\n  return genres.map(({ id }) => {\n    return id;\n  });\n}\nfunction releaseDateChecker(release_date) {\n  if (release_date === '') {\n    return 'no info';\n  }\n  return release_date?.slice(0, 4);\n}\n\nfunction posterChecker(poster_path) {\n  if (poster_path === null) {\n    return (poster =\n      'https://via.placeholder.com/440x660.jpg?text=Image+Not+Found');\n  }\n  return `https://image.tmdb.org/t/p/w500${poster_path}`;\n}\n","import { renderMovieCards } from './createLibrary';\nimport { loaderShow, hideLoader } from './loader';\n\nconst libBtnWatch = document.querySelector('[data-action=\"watched\"]');\nconst libBtnQueue = document.querySelector('[data-action=\"queue\"]');\nexport let isWatchedOpen = true;\nexport let isQueueOpen = false;\n\nwindow.addEventListener('DOMContentLoaded', onLibraryLoad);\nlibBtnWatch.addEventListener('click', onClickLibBtnWatch);\nlibBtnQueue.addEventListener('click', onClickLibBtnQueue);\n\nexport function onLibraryLoad(event) {\n  loaderShow();\n  const movies = JSON.parse(localStorage.getItem('watchedCard'));\n  hideLoader();\n  renderMovieCards(movies);\n}\n\nexport function onClickLibBtnWatch(event) {\n  libBtnWatch.classList.add('disabled');\n  libBtnQueue.classList.remove('disabled');\n  libBtnWatch.disabled = event.target;\n  libBtnQueue.disabled = !event.target;\n  openWatched();\n  onLibraryLoad();\n}\n\nexport function onClickLibBtnQueue(event) {\n  loaderShow();\n  libBtnQueue.classList.add('disabled');\n  libBtnWatch.classList.remove('disabled');\n  libBtnQueue.disabled = event.target;\n  libBtnWatch.disabled = !event.target;\n  openQueue();\n  const movies = JSON.parse(localStorage.getItem('queuedCard'));\n  hideLoader();\n  renderMovieCards(movies);\n}\n\nfunction openWatched() {\n  isWatchedOpen = true;\n  isQueueOpen = false;\n}\nfunction openQueue() {\n  isWatchedOpen = false;\n  isQueueOpen = true;\n}\n"],"names":["$31L8x","parcelRequire","$1sEOH","$c7c36ca32babbe02$export$bc472845f7b7844b","movies","length","gallery","innerHTML","map","poster_path","title","genres","release_date","id","releaseDate","slice","$c7c36ca32babbe02$var$releaseDateChecker","titleUp","toUpperCase","poster","$c7c36ca32babbe02$var$posterChecker","genre","$c7c36ca32babbe02$var$genreById","$3JWO1","getGenre","join","$c7c36ca32babbe02$var$createMovieCard","$c0a1cbc97978a26e$var$libBtnWatch","document","querySelector","$c0a1cbc97978a26e$var$libBtnQueue","$c0a1cbc97978a26e$export$bea27853fa47345","$c0a1cbc97978a26e$export$9509f5efa46182d7","$c0a1cbc97978a26e$export$4cda8f1f13aeae6d","event","$gjiCh","loaderShow","JSON","parse","localStorage","getItem","hideLoader","window","addEventListener","classList","add","remove","disabled","target","$1d777fcb72d100bf$var$getMovieApi","$1TPJ0","GetMovieApi","$1d777fcb72d100bf$export$21666b427502ea6d","backdrop","modalOpenClose","closeBtn","modalCard","$1d777fcb72d100bf$var$movie","$1d777fcb72d100bf$var$watchedMovie","$1d777fcb72d100bf$var$queuedMovie","$1d777fcb72d100bf$var$onModalClose","toggle","removeEventListener","$1d777fcb72d100bf$var$closeOnKeydown","$1d777fcb72d100bf$var$onBackdropClose","e","currentTarget","code","$1d777fcb72d100bf$export$e3cd2a9e9061f2c1","contains","push","setItem","stringify","textContent","filterWatchedMovie","filter","item","Number","$1d777fcb72d100bf$export$47c64e1cb6fdbeb7","filterQueuedMovie","async","ref","ref1","parentNode","getAttribute","fetchMoviebyId","renderMovieCard","error","console","btnRefs","addQueue","addWatched","find","movie1","movie2"],"version":3,"file":"my-library.7dd928f1.js.map"}